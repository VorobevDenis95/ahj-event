{"version":3,"file":"main.js","mappings":"mBAAe,MAAMA,EACnBC,WAAAA,GACEC,KAAKC,MAAQ,EACbD,KAAKE,KAAO,EACZF,KAAKG,SAAW,IAClB,ECHa,MAAMC,EACnBL,WAAAA,CAAYM,GACVL,KAAKK,OAASA,EACdL,KAAKM,OAAS,KACdN,KAAKO,KAAM,EACXP,KAAKG,SAAW,KAChBH,KAAKQ,UAAY,IAAIV,EAErBE,KAAKS,QAAUT,KAAKS,QAAQC,KAAKV,MAEjCA,KAAKK,OAAOM,SAASC,IACnBA,EAAKC,iBAAiB,QAASb,KAAKS,QAAQ,GAEhD,CAEAK,gBAAAA,GACE,IAAIC,EAAeC,KAAKC,MAAMD,KAAKV,UAAYN,KAAKK,OAAOa,OAAS,IACpE,KAAOH,IAAiBf,KAAKM,QAC3BS,EAAeC,KAAKC,MAAMD,KAAKV,UAAYN,KAAKK,OAAOa,OAAS,IAGlE,OADAlB,KAAKM,OAASS,EACPA,CACT,CAEAI,iBAAAA,GACE,MAAMP,EAAOZ,KAAKK,OAAOe,QAAQC,GAAOA,EAAGC,UAAUC,SAAS,kBAAiB,GAC3EX,GAAMA,EAAKU,UAAUE,OAAO,eAClC,CAEAC,cAAAA,GACezB,KAAKK,OAAOL,KAAKc,oBACzBQ,UAAUI,IAAI,eACrB,CAEAC,UAAAA,GACE3B,KAAKG,SAAWyB,aAAY,KACrB5B,KAAKO,KACRP,KAAKE,OAEHF,KAAKO,MACPP,KAAKO,KAAM,GAEbP,KAAKmB,oBACLnB,KAAKyB,gBAAgB,GACpB,IACL,CAEAI,cAAAA,GACE7B,KAAKO,KAAM,EACXuB,cAAc9B,KAAKG,SACrB,CAEA4B,SAAAA,GACEC,SAASC,cAAc,iBAAiBC,YAAclC,KAAKQ,UAAUP,KACvE,CAEAkC,QAAAA,GAC8B,IAAxBnC,KAAKQ,UAAUN,MACjBF,KAAKoC,WAEPJ,SAASC,cAAc,gBAAgBC,YAAclC,KAAKQ,UAAUN,IACtE,CAEAO,OAAAA,CAAQ4B,GACqB,uBAAvBA,EAAEC,OAAOC,YACXvC,KAAKQ,UAAUP,OAAS,EACxBD,KAAK+B,YACL/B,KAAK6B,iBACL7B,KAAKmB,oBACLnB,KAAK2B,aAET,CAEAzB,IAAAA,GACEF,KAAKQ,UAAUN,MAAQ,EACvBF,KAAKmC,UACP,CAEAC,QAAAA,GACEpC,KAAK6B,iBACLW,MAAM,eACR,EChFF,MAAMnC,EAASoC,MAAMC,KAAKV,SAASW,iBAAiB,WAE9CC,EAAgB,ICHP,MACb7C,WAAAA,CAAYM,GACVL,KAAK6C,MAAQ,IAAIzC,EAAMC,EACzB,CAEAyC,KAAAA,GACE9C,KAAK6C,MAAMlB,YACb,GDJuCtB,GACzCuC,EAAcE,O","sources":["webpack://ahj-event/./src/js/GameState.js","webpack://ahj-event/./src/js/Board.js","webpack://ahj-event/./src/js/app.js","webpack://ahj-event/./src/js/GameController.js"],"sourcesContent":["export default class GameState {\n  constructor() {\n    this.score = 0;\n    this.miss = 0;\n    this.interval = null;\n  }\n}\n","import GameState from './GameState';\n\nexport default class Board {\n  constructor(fields) {\n    this.fields = fields;\n    this.random = null;\n    this.hit = false;\n    this.interval = null;\n    this.gameState = new GameState();\n\n    this.onClick = this.onClick.bind(this);\n\n    this.fields.forEach((item) => {\n      item.addEventListener('click', this.onClick);\n    });\n  }\n\n  setsRandomNumber() {\n    let randomNumber = Math.floor(Math.random() * (this.fields.length - 1));\n    while (randomNumber === this.random) {\n      randomNumber = Math.floor(Math.random() * (this.fields.length - 1));\n    }\n    this.random = randomNumber;\n    return randomNumber;\n  }\n\n  deleteActiveClass() {\n    const item = this.fields.filter((el) => el.classList.contains('field_active'))[0];\n    if (item) item.classList.remove('field_active');\n  }\n\n  addActiveClass() {\n    const item = this.fields[this.setsRandomNumber()];\n    item.classList.add('field_active');\n  }\n\n  moveGoblin() {\n    this.interval = setInterval(() => {\n      if (!this.hit) {\n        this.miss();\n      }\n      if (this.hit) {\n        this.hit = false;\n      }\n      this.deleteActiveClass();\n      this.addActiveClass();\n    }, 1000);\n  }\n\n  clearsInterval() {\n    this.hit = true;\n    clearInterval(this.interval);\n  }\n\n  showScore() {\n    document.querySelector('.score_number').textContent = this.gameState.score;\n  }\n\n  showMiss() {\n    if (this.gameState.miss === 5) {\n      this.gameOver();\n    }\n    document.querySelector('.miss_number').textContent = this.gameState.miss;\n  }\n\n  onClick(e) {\n    if (e.target.className === 'field field_active') {\n      this.gameState.score += 1;\n      this.showScore();\n      this.clearsInterval();\n      this.deleteActiveClass();\n      this.moveGoblin();\n    }\n  }\n\n  miss() {\n    this.gameState.miss += 1;\n    this.showMiss();\n  }\n\n  gameOver() {\n    this.clearsInterval();\n    alert('Вы проиграли');\n  }\n}\n","/* eslint-disable no-unused-vars */\nimport GameController from './GameController';\n\nconst fields = Array.from(document.querySelectorAll('.field'));\n\nconst gameContorler = new GameController(fields);\ngameContorler.start();\n","import Board from './Board';\n\nexport default class GameController {\n  constructor(fields) {\n    this.board = new Board(fields);\n  }\n\n  start() {\n    this.board.moveGoblin();\n  }\n}\n"],"names":["GameState","constructor","this","score","miss","interval","Board","fields","random","hit","gameState","onClick","bind","forEach","item","addEventListener","setsRandomNumber","randomNumber","Math","floor","length","deleteActiveClass","filter","el","classList","contains","remove","addActiveClass","add","moveGoblin","setInterval","clearsInterval","clearInterval","showScore","document","querySelector","textContent","showMiss","gameOver","e","target","className","alert","Array","from","querySelectorAll","gameContorler","board","start"],"sourceRoot":""}